/*
You've stumbled upon Karma.gs's core
grid engine :)
====================================== */
_get_column_width(size_multiple = 1)
	( (_goldilocks * size_multiple) - (_grid_columns - 1) * _gutter_width ) / (_grid_columns)

_get_span_width(columns, size_multiple = 1)
	columns * _get_column_width(size_multiple) + (columns - 1) * _gutter_width

_generate_row(size_multiple = 1)
	width (_get_span_width(_grid_columns, size_multiple) + _gutter_width)
	margin-left (_gutter_width * -1)

_generate_column(size, size_multiple = 1)
	width _get_span_width(size, size_multiple)
	margin-left _gutter_width

row(columns = _grid_columns)
	@extends .clearfix
	display block
	width 100%
	padding 0
	margin 0
	@media daddy
		_generate_row(2)
	@media mummy
		_generate_row()

columns(span = 1, expand_full = nil, ignore_media = false)

	float left
	margin-right 0
	padding-left 0
	padding-right 0

	if expand_full == 'daddy'
		_generate_column(span, 2)
	else if expand_full == 'mummy'
		_generate_column(span)
	else if expand_full == 'baby'
		columns(span, false, true)
	else

		if expand_full == nil && span <= (_grid_columns * _grid_expand_min_proportion)
			width round(((span / _grid_columns)*100)%)
		if expand_full == false
			width round(((span / _grid_columns)*100)%)
		else
			width 100%

		if ignore_media == false
			&
				@media daddy
						_generate_column(span, 2)
				@media mummy
						_generate_column(span)

offset(span = 1)
	@media daddy
		margin-left (_get_span_width(span, 2) + _gutter_width * 2)!important
	@media mummy
		margin-left (_get_span_width(span) + _gutter_width * 2)!important

pull-right()
	float right
